set t_Co=256

" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
  autocmd bufwritepost .vimrc.local source $MYVIMRC
  autocmd bufwritepost .vimrc.bundles source $MYVIMRC
  autocmd bufwritepost .vimrc.bundles BundleInstall
  autocmd bufwritepost .vimrc.bundles.local source $MYVIMRC
  autocmd bufwritepost .vimrc.bundles.local BundleInstall
endif

" reSource
nmap <leader>r :source $MYVIMRC<CR>

" open .vimrc.local
nmap <leader>v :tabedit $MYVIMRC.local<CR>
nmap <leader>V :tabedit $MYVIMRC<CR>
nmap <leader>c :tabedit $MYVIMRC.bundles.local<CR>
nmap <leader>C :tabedit $MYVIMRC.bundles<CR>

" focus NERDTree
nmap <leader>n :NERDTreeToggle<CR>

" toggle Tagbar
nmap <leader>t :TagbarToggle<CR>

" gitblame and tab navigation
nmap <leader>b :Gblame<CR> A
nmap <leader>, gT
nmap <leader>. gt

" next/previous quickfix
nmap <leader>j :cn<CR>
nmap <leader>k :cp<CR>

" Ack search for the word including its boundries
map <leader>q :Ack "\b<cword>\b"<CR>
nmap <leader>a :Ack "

" Allow <C-I> for file navigation
noremap <C-N> <C-A>

" Stepping integration in vim-LLDB
nmap <leader>L :Lstep<CR>
nmap <leader>; :Lexpression 
nmap <leader>l :Lbreakpoint<CR>

nnoremap <Space><Space> :Lnext<CR>
nnoremap <Left> :Lcontinue<CR>
nnoremap <Right> :Lstep<CR>
nnoremap <Up> :Lup<CR>
nnoremap <Down> :Ldown<CR>
let g:ackprg = 'ag --ignore tags --nogroup --nocolor --column'

nmap <leader>x :cw<CR>

set tabstop=4

set mouse=a

" whitespace
set list
set listchars=tab:\⣧\⣀

set undofile                " Save undo's after file closes
set undodir=$HOME/.vim/undo " where to save undo histories
set undolevels=1000         " How many undos
set undoreload=10000        " number of lines to save for undo " " " "

set updatetime=500
nnoremap <leader>w :exe 'silent! ptag '.expand("<cword>")<CR>

set noexpandtab
set tabstop=4
set shiftwidth=4

nmap <leader>z :set invlist<CR>

let tlist_vala_settings='c#;d:macro;t:typedef;n:namespace;c:class;'.
  \ 'E:event;g:enum;s:struct;i:interface;'.
  \ 'p:properties;m:method'

let g:tagbar_ctags_bin = "anjuta-tags"
